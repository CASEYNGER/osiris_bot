"""–•—ç–Ω–¥–ª–µ—Ä—ã (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)."""
from aiogram import Router, F, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

from config_reader import config

from utils.check_funcs import contains_bad_words

from db.db_work import (
    register_user, is_registered, is_registered_for_send_msg
)

from kbs.all_kbs import main_kb

start_router = Router()


@start_router.message(CommandStart())
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :message: —Å–æ–æ–±—â–µ–Ω–∏–µ (class Message).
    """
    user_id = message.from_user.id
    username = message.from_user.username or "None"
    full_name = message.from_user.full_name or "None"

    if await is_registered(user_id):
        await message.answer(
            f"–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞, <b>{full_name}</b>! üëã\n\n"
            "–Ø <b>–û—Å–∏—Ä–∏—Å</b>, —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ –º–∏—Ä–µ "
            "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.\n\n"
            "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ. –Ø —Å–æ–±—Ä–∞–ª "
            "—Å–∞–º—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≥–æ—Ç–æ–≤ —Å —Ç–æ–±–æ–π –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.\n\n"
            "–ü—Ä–æ—Å—Ç–æ <i>–≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç</i> –∏–∑ –º–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!",
            reply_markup=main_kb(
                user_telegram_id=message.from_user.id
            )
        )
    else:
        await register_user(user_id, username, full_name)
        await message.answer(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}! üëã\n\n"
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç –û—Å–∏—Ä–∏—Å, –∏ —Ç—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å—Ç–∞–ª —á–∞—Å—Ç—å—é –º–æ–µ–≥–æ"
            "–º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ–≥–æ –º–∏—Ä–∞. –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã "
            "–ø–æ–º–æ—á—å —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö "
            "–∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è.\n\n"
            "–í—Å–µ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ - —ç—Ç–æ <i>–≤—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç</i> –≤ –º–µ–Ω—é, –∏ —è "
            "–ø—Ä–æ–≤–µ–¥—É —Ç–µ–±—è –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º! –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ "
            "–¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è.\n\n –ó–∞—Ö–æ–¥–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ!",
            reply_markup=main_kb(
                user_telegram_id=message.from_user.id
            )
        )


@start_router.callback_query(F.data == "contact")
async def contact_button(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Åallback_query "contact".

    –í—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞.

    :callback: –≤—ã–∑–æ–≤ (class CallbackQuery).
    """
    await callback.message.edit_text(
        "<b>–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º</b>\n\n"
        "–î–ª—è <b>–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</b> –¥–∞–ª—å–Ω–µ–π—à–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ "
        "–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è:\n\n"
        "<b>–ü—Ä–∏–º–µ—Ä:</b> #—Å–≤—è–∑—å <i>–ü—Ä–∏–≤–µ—Ç, —è —é–∑–µ—Ä!...</i>\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ!"
    )
    await callback.answer()


@start_router.message(F.text.startswith("#—Å–≤—è–∑—å "))
async def send_user_message_to_admin(message: Message, bot: Bot):
    """–†–µ–¥–∏—Ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    user_id = message.from_user.id

    if not await is_registered_for_send_msg(user_id):
        await message.answer(
            "‚õî –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–π–¥–∏—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é!\n\n"
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n"
            "- –ò–º—è;\n- –§–∞–º–∏–ª–∏—è;\n- E-mail <i>(–¥–ª—è —Å–≤—è–∑–∏)</i>."
        )
        return

    text = message.text.replace("#—Å–≤—è–∑—å ", "").strip()

    if not text:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ <b>—Ñ–æ—Ä–º–∞—Ç</b> –æ–±—Ä–∞—â–µ–Ω–∏—è!\n\n"
            "<b>–ü—Ä–∏–º–µ—Ä:</b> #—Å–≤—è–∑—å <i>–ü—Ä–∏–≤–µ—Ç, —è —é–∑–µ—Ä!...</i>\n\n"
        )
        return

    if contains_bad_words(text):
        await message.answer(
            "‚ùå <b>–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.</b>\n\n"
            "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –º–æ–∂–µ—Ç "
            "–±—ã—Ç—å –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–º –∏ —É–Ω–∏–∂–∞—é—â–∏–º –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö "
            "–ª—é–¥–µ–π."
            )
        return

    admin_id = config.admin
    await bot.send_message(
        admin_id,
        f"üì© <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username}:</b>\n\n{text}"
    )
    await message.answer(
        "‚úÖ <b>–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.</b>\n\n"
        "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç."
        )
